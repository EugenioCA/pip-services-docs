<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pip.Services Docs â€“ gRPC module</title>
    <link>/toolkit_api/dart/grpc/</link>
    <description>Recent content in gRPC module on Pip.Services Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/toolkit_api/dart/grpc/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Toolkit_api: Build</title>
      <link>/toolkit_api/dart/grpc/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/toolkit_api/dart/grpc/build/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;defaultgrpcfactorydefault_grpc_factory&#34;&gt;&lt;a href=&#34;default_grpc_factory&#34;&gt;DefaultGrpcFactory&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Creates gRPC components based on their descriptors.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Toolkit_api: Clients</title>
      <link>/toolkit_api/dart/grpc/clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/toolkit_api/dart/grpc/clients/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;commandablegrpcclientcommandable_grpc_client&#34;&gt;&lt;a href=&#34;commandable_grpc_client&#34;&gt;CommandableGrpcClient&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Client that calls a commandable gRPC service.
Commandable services are generated automatically for &lt;a href=&#34;../../commons/commands/icommandable&#34;&gt;ICommandable&lt;/a&gt;. Each command is exposed as an invoke method that receives all parameters as args.&lt;/p&gt;
&lt;h4 id=&#34;grpcclientgrpc_client&#34;&gt;&lt;a href=&#34;grpc_client&#34;&gt;GrpcClient&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Client that calls remote endpoints using the gRPC protocol.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Toolkit_api: Services</title>
      <link>/toolkit_api/dart/grpc/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/toolkit_api/dart/grpc/services/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;h4 id=&#34;iregisterableiregisterable&#34;&gt;&lt;a href=&#34;iregisterable&#34;&gt;IRegisterable&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Interface to perform on-demand registrations.&lt;/p&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;commandablegrpcservicecommandable_grpc_service&#34;&gt;&lt;a href=&#34;commandable_grpc_service&#34;&gt;CommandableGrpcService&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Abstract service that receives commands via gRPC protocol
to operations automatically generated for commands defined in &lt;a href=&#34;../../commons/commands/icommandable&#34;&gt;ICommandable&lt;/a&gt;.
Each command is exposed as an invoke method that receives a command name and parameters.&lt;/p&gt;
&lt;h4 id=&#34;grpcendpointgrpc_endpoint&#34;&gt;&lt;a href=&#34;grpc_endpoint&#34;&gt;GrpcEndpoint&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Used for creating gRPC endpoints. An endpoint is a URL at which a given service can be accessed by a client.&lt;/p&gt;
&lt;h4 id=&#34;grpcservicegrpc_service&#34;&gt;&lt;a href=&#34;grpc_service&#34;&gt;GrpcService&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Abstract service that receives remote calls via gRPC protocol.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
